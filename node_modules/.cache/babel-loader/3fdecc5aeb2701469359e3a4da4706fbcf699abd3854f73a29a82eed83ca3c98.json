{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport SgbdOverview from './components/SgbdOverview'; // Import SGBD overview page\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n\n  // Function to handle successful login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setIsSidebarVisible(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1\",\n        children: [isSidebarVisible && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(LoginPage, {\n                onLoginSuccess: handleLoginSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sgbd-overview\",\n              element: /*#__PURE__*/_jsxDEV(SgbdOverview, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/F3Jd1derGKMBmyo30GkYmv6G5Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navbar","Sidebar","SgbdOverview","LoginPage","MainPage","jsxDEV","_jsxDEV","App","_s","isSidebarVisible","setIsSidebarVisible","isLoggedIn","setIsLoggedIn","toggleSidebar","handleLoginSuccess","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLoginSuccess","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport SgbdOverview from './components/SgbdOverview'; // Import SGBD overview page\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\n\nconst App = () => {\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible(!isSidebarVisible);\n  };\n\n  // Function to handle successful login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setIsSidebarVisible(true);\n  };\n\n  return (\n    <Router>\n      <div className=\"flex flex-col h-screen\">\n        {/* Navbar */}\n        <Navbar />\n\n        <div className=\"flex flex-1\">\n          {/* Conditionally render Sidebar */}\n          {isSidebarVisible && <Sidebar />}\n\n          <div className=\"flex-1 overflow-y-auto\">\n            <Routes>\n              <Route path=\"/\" element={<MainPage />} />\n              <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n              <Route path=\"/sgbd-overview\" element={<SgbdOverview />} /> {/* Add the route for SGBD Overview */}\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}