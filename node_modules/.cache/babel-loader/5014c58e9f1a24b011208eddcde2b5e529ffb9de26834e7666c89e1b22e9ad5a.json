{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\components\\\\DatabaseMonitoring.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatabaseMonitoring = () => {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const response = await axios.get('/api/database-metrics', {\n          params: {\n            host: 'localhost',\n            username: 'root',\n            password: 'password',\n            database: 'your_database'\n          }\n        });\n        setMetrics(response.data.metrics);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching database metrics:', error);\n        setLoading(false);\n      }\n    };\n    fetchMetrics();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Database Monitoring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: metrics.map((metric, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [metric.name, \": \", metric.value]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DatabaseMonitoring, \"3HnXy3TiuHstLiU/lCL6zOWCzsM=\");\n_c = DatabaseMonitoring;\nexport default DatabaseMonitoring;\nvar _c;\n$RefreshReg$(_c, \"DatabaseMonitoring\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DatabaseMonitoring","_s","metrics","setMetrics","loading","setLoading","fetchMetrics","response","get","params","host","username","password","database","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","metric","index","name","value","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/components/DatabaseMonitoring.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DatabaseMonitoring = () => {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const response = await axios.get('/api/database-metrics', {\r\n          params: {\r\n            host: 'localhost',\r\n            username: 'root',\r\n            password: 'password',\r\n            database: 'your_database',\r\n          },\r\n        });\r\n        setMetrics(response.data.metrics);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching database metrics:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Database Monitoring</h1>\r\n      <ul>\r\n        {metrics.map((metric, index) => (\r\n          <li key={index}>\r\n            {metric.name}: {metric.value}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatabaseMonitoring;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,uBAAuB,EAAE;UACxDC,MAAM,EAAE;YACNC,IAAI,EAAE,WAAW;YACjBC,QAAQ,EAAE,MAAM;YAChBC,QAAQ,EAAE,UAAU;YACpBC,QAAQ,EAAE;UACZ;QACF,CAAC,CAAC;QACFV,UAAU,CAACI,QAAQ,CAACO,IAAI,CAACZ,OAAO,CAAC;QACjCG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxDV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA;MAAAkB,QAAA,EACGf,OAAO,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBzB,OAAA;QAAAkB,QAAA,GACGM,MAAM,CAACE,IAAI,EAAC,IAAE,EAACF,MAAM,CAACG,KAAK;MAAA,GADrBF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA1CID,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AA4CxB,eAAeA,kBAAkB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}