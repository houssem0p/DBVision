{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\components\\\\DashboardChoicePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardChoicePage = () => {\n  _s();\n  const [databases, setDatabases] = useState([]);\n  const [selectedDb, setSelectedDb] = useState('');\n  const [error, setError] = useState('');\n  const [isDbDashboard, setIsDbDashboard] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchDatabases = async () => {\n      try {\n        const dbCredentials = JSON.parse(localStorage.getItem('dbCredentials'));\n        if (!dbCredentials) {\n          setError('No credentials found. Please log in again.');\n          return;\n        }\n        const response = await axios.get('http://localhost:5000/api/databases', {\n          params: {\n            host: dbCredentials.host,\n            username: dbCredentials.username,\n            password: dbCredentials.password\n          }\n        });\n        if (response.data && response.data.databases) {\n          setDatabases(response.data.databases);\n        } else {\n          setError('No databases found.');\n        }\n      } catch (error) {\n        console.error('Error fetching databases:', error);\n        setError('Failed to load databases.');\n      }\n    };\n    if (isDbDashboard) {\n      fetchDatabases();\n    }\n  }, [isDbDashboard]);\n  const handleChoice = choice => {\n    if (choice === 'sgbd') {\n      navigate('/sgbd-overview'); // Navigate to the SGBD Dashboard\n    } else if (choice === 'database') {\n      setIsDbDashboard(true); // Show database selection\n    }\n  };\n  const handleSubmitDatabase = () => {\n    if (selectedDb) {\n      // Store the selected database in localStorage\n      localStorage.setItem('selectedDb', selectedDb);\n      // Proceed to MainPage with the selected database\n      navigate('/main'); // MainPage is your \"Database Dashboard\"\n    } else {\n      setError('Please select a database.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-screen bg-gradient-to-r from-gray-900 via-gray-800 to-gray-700 text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-8 bg-gray-800 bg-opacity-80 rounded-lg shadow-2xl w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-extrabold mb-8 text-gradient bg-clip-text text-transparent bg-gradient-to-r from-purple-500 to-blue-500\",\n        children: \"Choose Your Monitoring Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 p-6 rounded-lg hover:bg-gray-600 transition-all transform hover:scale-105 shadow-lg w-full sm:w-1/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-white mb-4\",\n            children: \"SGBD Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-purple-600 px-6 py-3 text-white rounded-lg w-full hover:bg-purple-700 transition-transform transform hover:scale-105\",\n            onClick: () => handleChoice('sgbd'),\n            children: \"Go to SGBD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 p-6 rounded-lg hover:bg-gray-600 transition-all transform hover:scale-105 shadow-lg w-full sm:w-1/3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-white mb-4\",\n            children: \"Database Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-600 px-6 py-3 text-white rounded-lg w-full hover:bg-blue-700 transition-transform transform hover:scale-105\",\n            onClick: () => handleChoice('database'),\n            children: \"Go to Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isDbDashboard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold mb-6 text-gradient bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-400\",\n          children: \"Select a Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 mb-6 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }, this), databases.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full p-4 bg-gray-700 text-white rounded-lg mb-6 shadow-md focus:outline-none focus:ring-2 focus:ring-purple-500\",\n            value: selectedDb,\n            onChange: e => setSelectedDb(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), databases.map((db, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: db,\n              children: db\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitDatabase,\n            className: \"bg-blue-600 px-6 py-3 text-white rounded-lg w-full hover:bg-blue-700 transition-transform transform hover:scale-105\",\n            children: \"Start Monitoring Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-400\",\n          children: \"No databases available for monitoring.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardChoicePage, \"nf2GRiuc0s8QDGDDqMP3zbY5bys=\", false, function () {\n  return [useNavigate];\n});\n_c = DashboardChoicePage;\nexport default DashboardChoicePage;\nvar _c;\n$RefreshReg$(_c, \"DashboardChoicePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardChoicePage","_s","databases","setDatabases","selectedDb","setSelectedDb","error","setError","isDbDashboard","setIsDbDashboard","navigate","fetchDatabases","dbCredentials","JSON","parse","localStorage","getItem","response","get","params","host","username","password","data","console","handleChoice","choice","handleSubmitDatabase","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","value","onChange","e","target","map","db","index","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/components/DashboardChoicePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst DashboardChoicePage = () => {\r\n  const [databases, setDatabases] = useState([]);\r\n  const [selectedDb, setSelectedDb] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isDbDashboard, setIsDbDashboard] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchDatabases = async () => {\r\n      try {\r\n        const dbCredentials = JSON.parse(localStorage.getItem('dbCredentials'));\r\n        if (!dbCredentials) {\r\n          setError('No credentials found. Please log in again.');\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get('http://localhost:5000/api/databases', {\r\n          params: {\r\n            host: dbCredentials.host,\r\n            username: dbCredentials.username,\r\n            password: dbCredentials.password,\r\n          },\r\n        });\r\n\r\n        if (response.data && response.data.databases) {\r\n          setDatabases(response.data.databases);\r\n        } else {\r\n          setError('No databases found.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching databases:', error);\r\n        setError('Failed to load databases.');\r\n      }\r\n    };\r\n\r\n    if (isDbDashboard) {\r\n      fetchDatabases();\r\n    }\r\n  }, [isDbDashboard]);\r\n\r\n  const handleChoice = (choice) => {\r\n    if (choice === 'sgbd') {\r\n      navigate('/sgbd-overview'); // Navigate to the SGBD Dashboard\r\n    } else if (choice === 'database') {\r\n      setIsDbDashboard(true); // Show database selection\r\n    }\r\n  };\r\n\r\n  const handleSubmitDatabase = () => {\r\n    if (selectedDb) {\r\n      // Store the selected database in localStorage\r\n      localStorage.setItem('selectedDb', selectedDb);\r\n      // Proceed to MainPage with the selected database\r\n      navigate('/main'); // MainPage is your \"Database Dashboard\"\r\n    } else {\r\n      setError('Please select a database.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-gray-900 via-gray-800 to-gray-700 text-white\">\r\n      <div className=\"text-center p-8 bg-gray-800 bg-opacity-80 rounded-lg shadow-2xl w-full max-w-4xl\">\r\n        <h2 className=\"text-4xl font-extrabold mb-8 text-gradient bg-clip-text text-transparent bg-gradient-to-r from-purple-500 to-blue-500\">\r\n          Choose Your Monitoring Dashboard\r\n        </h2>\r\n  \r\n        <div className=\"flex flex-wrap justify-center gap-6\">\r\n          <div className=\"bg-gray-700 p-6 rounded-lg hover:bg-gray-600 transition-all transform hover:scale-105 shadow-lg w-full sm:w-1/3\">\r\n            <h3 className=\"text-xl font-semibold text-white mb-4\">SGBD Dashboard</h3>\r\n            <button\r\n              className=\"bg-purple-600 px-6 py-3 text-white rounded-lg w-full hover:bg-purple-700 transition-transform transform hover:scale-105\"\r\n              onClick={() => handleChoice('sgbd')}\r\n            >\r\n              Go to SGBD\r\n            </button>\r\n          </div>\r\n  \r\n          <div className=\"bg-gray-700 p-6 rounded-lg hover:bg-gray-600 transition-all transform hover:scale-105 shadow-lg w-full sm:w-1/3\">\r\n            <h3 className=\"text-xl font-semibold text-white mb-4\">Database Dashboard</h3>\r\n            <button\r\n              className=\"bg-blue-600 px-6 py-3 text-white rounded-lg w-full hover:bg-blue-700 transition-transform transform hover:scale-105\"\r\n              onClick={() => handleChoice('database')}\r\n            >\r\n              Go to Database\r\n            </button>\r\n          </div>\r\n        </div>\r\n  \r\n        {isDbDashboard && (\r\n          <div className=\"mt-6\">\r\n            <h3 className=\"text-2xl font-semibold mb-6 text-gradient bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-blue-400\">\r\n              Select a Database\r\n            </h3>\r\n            {error && <p className=\"text-red-500 mb-6 text-sm\">{error}</p>}\r\n            {databases.length > 0 ? (\r\n              <>\r\n                <select\r\n                  className=\"w-full p-4 bg-gray-700 text-white rounded-lg mb-6 shadow-md focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                  value={selectedDb}\r\n                  onChange={(e) => setSelectedDb(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select a database</option>\r\n                  {databases.map((db, index) => (\r\n                    <option key={index} value={db}>\r\n                      {db}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                <button\r\n                  onClick={handleSubmitDatabase}\r\n                  className=\"bg-blue-600 px-6 py-3 text-white rounded-lg w-full hover:bg-blue-700 transition-transform transform hover:scale-105\"\r\n                >\r\n                  Start Monitoring Database\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <p className=\"text-gray-400\">No databases available for monitoring.</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  \r\n  \r\n  \r\n};\r\n\r\nexport default DashboardChoicePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}