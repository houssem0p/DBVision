{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  toggleSidebar\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({\n    barChart: {\n      series: [],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800\n          }\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    lineChart: {\n      series: [],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800\n          }\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    pieChart: {\n      series: [],\n      options: {\n        labels: [],\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    areaChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'area',\n          stacked: true,\n          toolbar: {\n            show: false\n          }\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    radarChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'radar'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    heatmapChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'heatmap'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    scatterChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'scatter'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    // New metrics charts\n    querySpeedChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'line'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    cpuUsageChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'line'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    memoryUsageChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'line'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    responseTimeChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'line'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    activeConnectionsChart: {\n      series: [],\n      options: {\n        chart: {\n          type: 'line'\n        },\n        xaxis: {\n          categories: []\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\n    if (credentials) {\n      const {\n        host,\n        username,\n        password,\n        database\n      } = credentials;\n      const fetchData = () => {\n        fetch(`http://localhost:5000/api/database-metrics?host=${host}&username=${username}&password=${password}&database=${database}`).then(response => response.json()).then(data => {\n          if (data.success && data.metrics.length > 0) {\n            const metrics = data.metrics;\n            setData(metrics);\n\n            // Assuming new data from the API\n            const newQuerySpeedData = metrics.map(item => item.querySpeed);\n            const newCpuUsageData = metrics.map(item => item.cpuUsage);\n            const newMemoryUsageData = metrics.map(item => item.memoryUsage);\n            const newResponseTimeData = metrics.map(item => item.responseTime);\n            const newActiveConnectionsData = metrics.map(item => item.activeConnections);\n            setChartData({\n              barChart: {\n                series: [{\n                  name: 'Row Count',\n                  data: metrics.map(item => item.value)\n                }],\n                options: {\n                  ...chartData.barChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              lineChart: {\n                series: [{\n                  name: 'Row Count',\n                  data: metrics.map(item => item.value)\n                }],\n                options: {\n                  ...chartData.lineChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              pieChart: {\n                series: metrics.map(item => item.value),\n                options: {\n                  ...chartData.pieChart.options,\n                  labels: metrics.map(item => item.name)\n                }\n              },\n              areaChart: {\n                series: [{\n                  name: 'Row Count',\n                  data: metrics.map(item => item.value)\n                }],\n                options: {\n                  ...chartData.areaChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              radarChart: {\n                series: [{\n                  name: 'Metrics',\n                  data: metrics.map(item => item.value)\n                }],\n                options: {\n                  ...chartData.radarChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              heatmapChart: {\n                series: metrics.map((item, index) => ({\n                  name: item.name,\n                  data: [item.value, item.value * 0.9, item.value * 1.1]\n                })),\n                options: {\n                  ...chartData.heatmapChart.options,\n                  xaxis: {\n                    categories: ['Metric 1', 'Metric 2', 'Metric 3']\n                  }\n                }\n              },\n              scatterChart: {\n                series: metrics.map((item, index) => ({\n                  name: item.name,\n                  data: [[index, item.value]]\n                })),\n                options: {\n                  ...chartData.scatterChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              // Update new metrics\n              querySpeedChart: {\n                series: [{\n                  name: 'Query Speed',\n                  data: newQuerySpeedData\n                }],\n                options: {\n                  ...chartData.querySpeedChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              cpuUsageChart: {\n                series: [{\n                  name: 'CPU Usage',\n                  data: newCpuUsageData\n                }],\n                options: {\n                  ...chartData.cpuUsageChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              memoryUsageChart: {\n                series: [{\n                  name: 'Memory Usage',\n                  data: newMemoryUsageData\n                }],\n                options: {\n                  ...chartData.memoryUsageChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              responseTimeChart: {\n                series: [{\n                  name: 'Response Time',\n                  data: newResponseTimeData\n                }],\n                options: {\n                  ...chartData.responseTimeChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              },\n              activeConnectionsChart: {\n                series: [{\n                  name: 'Active Connections',\n                  data: newActiveConnectionsData\n                }],\n                options: {\n                  ...chartData.activeConnectionsChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              }\n            });\n          }\n        }).catch(err => console.error('Error fetching data:', err));\n      };\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 5000); // Poll every 5 seconds\n\n      return () => clearInterval(intervalId); // Cleanup on component unmount\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page bg-gray-900 min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar,\n      className: \"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\",\n      children: \"Toggle Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-white mb-6\",\n        children: \"Database Monitoring Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-purple-500\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Query Execution Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.querySpeedChart.options,\n            series: chartData.querySpeedChart.series,\n            type: \"line\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"CPU Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.cpuUsageChart.options,\n            series: chartData.cpuUsageChart.series,\n            type: \"line\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Memory Usage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.memoryUsageChart.options,\n            series: chartData.memoryUsageChart.series,\n            type: \"line\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Response Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.responseTimeChart.options,\n            series: chartData.responseTimeChart.series,\n            type: \"line\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Active Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.activeConnectionsChart.options,\n            series: chartData.activeConnectionsChart.series,\n            type: \"line\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"Kr0WnTRil6ydWrvwEgB4EVggMtM=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","motion","Chart","jsxDEV","_jsxDEV","MainPage","toggleSidebar","_s","data","setData","chartData","setChartData","barChart","series","options","chart","toolbar","show","animations","enabled","easing","speed","xaxis","categories","theme","palette","lineChart","pieChart","labels","areaChart","type","stacked","radarChart","heatmapChart","scatterChart","querySpeedChart","cpuUsageChart","memoryUsageChart","responseTimeChart","activeConnectionsChart","credentials","JSON","parse","localStorage","getItem","host","username","password","database","fetchData","fetch","then","response","json","success","metrics","length","newQuerySpeedData","map","item","querySpeed","newCpuUsageData","cpuUsage","newMemoryUsageData","memoryUsage","newResponseTimeData","responseTime","newActiveConnectionsData","activeConnections","name","value","index","catch","err","console","error","intervalId","setInterval","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","transition","duration","height","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/components/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Chart from 'react-apexcharts';\r\n\r\nconst MainPage = ({ toggleSidebar }) => {\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({\r\n    barChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          toolbar: { show: false },\r\n          animations: { enabled: true, easing: 'easeinout', speed: 800 },\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    lineChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          toolbar: { show: false },\r\n          animations: { enabled: true, easing: 'easeinout', speed: 800 },\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    pieChart: {\r\n      series: [],\r\n      options: {\r\n        labels: [],\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    areaChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'area',\r\n          stacked: true,\r\n          toolbar: { show: false },\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    radarChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'radar',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    heatmapChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'heatmap',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    scatterChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'scatter',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    // New metrics charts\r\n    querySpeedChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    cpuUsageChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    memoryUsageChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    responseTimeChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    activeConnectionsChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          type: 'line',\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\r\n    if (credentials) {\r\n      const { host, username, password, database } = credentials;\r\n\r\n      const fetchData = () => {\r\n        fetch(`http://localhost:5000/api/database-metrics?host=${host}&username=${username}&password=${password}&database=${database}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.success && data.metrics.length > 0) {\r\n              const metrics = data.metrics;\r\n              setData(metrics);\r\n\r\n              // Assuming new data from the API\r\n              const newQuerySpeedData = metrics.map((item) => item.querySpeed);\r\n              const newCpuUsageData = metrics.map((item) => item.cpuUsage);\r\n              const newMemoryUsageData = metrics.map((item) => item.memoryUsage);\r\n              const newResponseTimeData = metrics.map((item) => item.responseTime);\r\n              const newActiveConnectionsData = metrics.map((item) => item.activeConnections);\r\n\r\n              setChartData({\r\n                barChart: {\r\n                  series: [{ name: 'Row Count', data: metrics.map((item) => item.value) }],\r\n                  options: {\r\n                    ...chartData.barChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                lineChart: {\r\n                  series: [{ name: 'Row Count', data: metrics.map((item) => item.value) }],\r\n                  options: {\r\n                    ...chartData.lineChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                pieChart: {\r\n                  series: metrics.map((item) => item.value),\r\n                  options: {\r\n                    ...chartData.pieChart.options,\r\n                    labels: metrics.map((item) => item.name),\r\n                  },\r\n                },\r\n                areaChart: {\r\n                  series: [{ name: 'Row Count', data: metrics.map((item) => item.value) }],\r\n                  options: {\r\n                    ...chartData.areaChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                radarChart: {\r\n                  series: [{ name: 'Metrics', data: metrics.map((item) => item.value) }],\r\n                  options: {\r\n                    ...chartData.radarChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                heatmapChart: {\r\n                  series: metrics.map((item, index) => ({ name: item.name, data: [item.value, item.value * 0.9, item.value * 1.1] })),\r\n                  options: {\r\n                    ...chartData.heatmapChart.options,\r\n                    xaxis: { categories: ['Metric 1', 'Metric 2', 'Metric 3'] },\r\n                  },\r\n                },\r\n                scatterChart: {\r\n                  series: metrics.map((item, index) => ({ name: item.name, data: [[index, item.value]] })),\r\n                  options: {\r\n                    ...chartData.scatterChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                // Update new metrics\r\n                querySpeedChart: {\r\n                  series: [{ name: 'Query Speed', data: newQuerySpeedData }],\r\n                  options: {\r\n                    ...chartData.querySpeedChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                cpuUsageChart: {\r\n                  series: [{ name: 'CPU Usage', data: newCpuUsageData }],\r\n                  options: {\r\n                    ...chartData.cpuUsageChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                memoryUsageChart: {\r\n                  series: [{ name: 'Memory Usage', data: newMemoryUsageData }],\r\n                  options: {\r\n                    ...chartData.memoryUsageChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                responseTimeChart: {\r\n                  series: [{ name: 'Response Time', data: newResponseTimeData }],\r\n                  options: {\r\n                    ...chartData.responseTimeChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n                activeConnectionsChart: {\r\n                  series: [{ name: 'Active Connections', data: newActiveConnectionsData }],\r\n                  options: {\r\n                    ...chartData.activeConnectionsChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => console.error('Error fetching data:', err));\r\n      };\r\n\r\n      fetchData(); // Initial fetch\r\n      const intervalId = setInterval(fetchData, 5000); // Poll every 5 seconds\r\n\r\n      return () => clearInterval(intervalId); // Cleanup on component unmount\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <div className=\"main-page bg-gray-900 min-h-screen p-4\">\r\n      <button\r\n        onClick={toggleSidebar}\r\n        className=\"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\"\r\n      >\r\n        Toggle Sidebar\r\n      </button>\r\n\r\n      <div className=\"py-8 px-4\">\r\n        <h2 className=\"text-3xl font-bold text-white mb-6\">Database Monitoring Dashboard</h2>\r\n\r\n        <motion.div\r\n          className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          {data.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"bg-gray-800 p-6 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-purple-500\">{item.name}</h3>\r\n              <p className=\"text-gray-300\">{item.value}</p>\r\n            </div>\r\n          ))}\r\n        </motion.div>\r\n\r\n        <div className=\"mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-8\">\r\n          {/* Existing charts */}\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Query Execution Speed</h3>\r\n            <Chart\r\n              options={chartData.querySpeedChart.options}\r\n              series={chartData.querySpeedChart.series}\r\n              type=\"line\"\r\n              height={350}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">CPU Usage</h3>\r\n            <Chart\r\n              options={chartData.cpuUsageChart.options}\r\n              series={chartData.cpuUsageChart.series}\r\n              type=\"line\"\r\n              height={350}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Memory Usage</h3>\r\n            <Chart\r\n              options={chartData.memoryUsageChart.options}\r\n              series={chartData.memoryUsageChart.series}\r\n              type=\"line\"\r\n              height={350}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Response Time</h3>\r\n            <Chart\r\n              options={chartData.responseTimeChart.options}\r\n              series={chartData.responseTimeChart.series}\r\n              type=\"line\"\r\n              height={350}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Active Connections</h3>\r\n            <Chart\r\n              options={chartData.activeConnectionsChart.options}\r\n              series={chartData.activeConnectionsChart.series}\r\n              type=\"line\"\r\n              height={350}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}