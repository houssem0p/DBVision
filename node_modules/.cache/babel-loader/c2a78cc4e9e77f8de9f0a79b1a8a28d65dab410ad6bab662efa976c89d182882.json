{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVIsion\\\\dbvision\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/database-metrics', {\n          params: {\n            host: 'localhost',\n            // Replace with your database host\n            username: 'root',\n            // Replace with your database username\n            password: '',\n            // Replace with your database password\n            database: 'your_db_name' // Replace with your database name\n          }\n        });\n        setMetrics(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching metrics:', error);\n      }\n    };\n    fetchMetrics();\n    const intervalId = setInterval(fetchMetrics, 5000); // Refresh every 5 seconds\n    return () => clearInterval(intervalId);\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Database Monitoring Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Database Size (MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            chart: {\n              type: 'radialBar'\n            }\n          },\n          series: [parseFloat(metrics.databaseMetrics.sizeMB)],\n          type: \"radialBar\",\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Active Connections\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            chart: {\n              type: 'bar'\n            }\n          },\n          series: [parseInt(metrics.databaseMetrics.activeConnections)],\n          type: \"bar\",\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CPU Usage (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            chart: {\n              type: 'radialBar'\n            }\n          },\n          series: [parseFloat(metrics.systemMetrics.cpuUsage)],\n          type: \"radialBar\",\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Memory Usage (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            chart: {\n              type: 'radialBar'\n            }\n          },\n          series: [parseFloat(metrics.systemMetrics.memoryUsage)],\n          type: \"radialBar\",\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Disk Usage (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            chart: {\n              type: 'donut'\n            }\n          },\n          series: [parseFloat(metrics.systemMetrics.diskUsage)],\n          type: \"donut\",\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"fBTGJBWRiP5pOKLlkzmUs+VdvMQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Chart","axios","jsxDEV","_jsxDEV","Dashboard","_s","metrics","setMetrics","loading","setLoading","fetchMetrics","response","get","params","host","username","password","database","data","error","console","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","chart","type","series","parseFloat","databaseMetrics","sizeMB","height","parseInt","activeConnections","systemMetrics","cpuUsage","memoryUsage","diskUsage","_c","$RefreshReg$"],"sources":["D:/DBVIsion/dbvision/src/components/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/database-metrics', {\r\n          params: {\r\n            host: 'localhost', // Replace with your database host\r\n            username: 'root',  // Replace with your database username\r\n            password: '',      // Replace with your database password\r\n            database: 'your_db_name', // Replace with your database name\r\n          },\r\n        });\r\n\r\n        setMetrics(response.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching metrics:', error);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5000); // Refresh every 5 seconds\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading metrics...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Database Monitoring Dashboard</h1>\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        {/* Database Metrics */}\r\n        <div>\r\n          <h2>Database Size (MB)</h2>\r\n          <Chart\r\n            options={{ chart: { type: 'radialBar' } }}\r\n            series={[parseFloat(metrics.databaseMetrics.sizeMB)]}\r\n            type=\"radialBar\"\r\n            height={200}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Active Connections</h2>\r\n          <Chart\r\n            options={{ chart: { type: 'bar' } }}\r\n            series={[parseInt(metrics.databaseMetrics.activeConnections)]}\r\n            type=\"bar\"\r\n            height={200}\r\n          />\r\n        </div>\r\n\r\n        {/* System Metrics */}\r\n        <div>\r\n          <h2>CPU Usage (%)</h2>\r\n          <Chart\r\n            options={{ chart: { type: 'radialBar' } }}\r\n            series={[parseFloat(metrics.systemMetrics.cpuUsage)]}\r\n            type=\"radialBar\"\r\n            height={200}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Memory Usage (%)</h2>\r\n          <Chart\r\n            options={{ chart: { type: 'radialBar' } }}\r\n            series={[parseFloat(metrics.systemMetrics.memoryUsage)]}\r\n            type=\"radialBar\"\r\n            height={200}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <h2>Disk Usage (%)</h2>\r\n          <Chart\r\n            options={{ chart: { type: 'donut' } }}\r\n            series={[parseFloat(metrics.systemMetrics.diskUsage)]}\r\n            type=\"donut\"\r\n            height={200}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}