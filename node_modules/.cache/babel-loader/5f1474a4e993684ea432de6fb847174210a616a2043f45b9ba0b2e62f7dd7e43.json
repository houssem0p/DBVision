{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVIsion\\\\dbvision\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  toggleSidebar\n}) => {\n  _s();\n  const [charts, setCharts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\n    if (!credentials) return;\n    const fetchMetrics = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/database-performance?host=${credentials.host}&username=${credentials.username}&password=${credentials.password}&database=${credentials.database}`);\n        const data = await response.json();\n        if (data.success) {\n          setCharts([{\n            title: 'Query Execution Speed',\n            type: 'line',\n            series: [{\n              name: 'Query Speed',\n              data: data.metrics.map(m => m.query_execution_speed)\n            }],\n            categories: data.metrics.map(m => m.timestamp)\n          }, {\n            title: 'CPU Usage',\n            type: 'radialBar',\n            series: [{\n              name: 'CPU',\n              data: data.metrics.map(m => m.cpu_usage)\n            }]\n          }, {\n            title: 'Memory Usage',\n            type: 'radialBar',\n            series: [{\n              name: 'Memory',\n              data: data.metrics.map(m => m.memory_usage)\n            }]\n          }, {\n            title: 'Active Connections',\n            type: 'bar',\n            series: [{\n              name: 'Connections',\n              data: data.metrics.map(m => m.active_connections)\n            }],\n            categories: data.metrics.map(m => m.timestamp)\n          }, {\n            title: 'Response Time',\n            type: 'line',\n            series: [{\n              name: 'Response',\n              data: data.metrics.map(m => m.response_time)\n            }],\n            categories: data.metrics.map(m => m.timestamp)\n          }]);\n        } else {\n          setError('Failed to fetch metrics.');\n        }\n      } catch (err) {\n        setError('Error fetching data.');\n      }\n    };\n    fetchMetrics();\n    const intervalId = setInterval(fetchMetrics, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar,\n      children: \"Toggle Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"charts\",\n      children: charts.map((chart, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: chart.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: {\n            xaxis: {\n              categories: chart.categories || []\n            },\n            theme: {\n              palette: 'palette5'\n            }\n          },\n          series: chart.series,\n          type: chart.type,\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"auEWgk4sRsFGShm9prBf+TxugmU=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Chart","motion","jsxDEV","_jsxDEV","MainPage","toggleSidebar","_s","charts","setCharts","error","setError","credentials","JSON","parse","localStorage","getItem","fetchMetrics","response","fetch","host","username","password","database","data","json","success","title","type","series","name","metrics","map","m","query_execution_speed","categories","timestamp","cpu_usage","memory_usage","active_connections","response_time","err","intervalId","setInterval","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","chart","index","options","xaxis","theme","palette","height","_c","$RefreshReg$"],"sources":["D:/DBVIsion/dbvision/src/components/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst MainPage = ({ toggleSidebar }) => {\r\n  const [charts, setCharts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\r\n    if (!credentials) return;\r\n\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/database-performance?host=${credentials.host}&username=${credentials.username}&password=${credentials.password}&database=${credentials.database}`\r\n        );\r\n        const data = await response.json();\r\n        if (data.success) {\r\n          setCharts([\r\n            {\r\n              title: 'Query Execution Speed',\r\n              type: 'line',\r\n              series: [{ name: 'Query Speed', data: data.metrics.map(m => m.query_execution_speed) }],\r\n              categories: data.metrics.map(m => m.timestamp),\r\n            },\r\n            {\r\n              title: 'CPU Usage',\r\n              type: 'radialBar',\r\n              series: [{ name: 'CPU', data: data.metrics.map(m => m.cpu_usage) }],\r\n            },\r\n            {\r\n              title: 'Memory Usage',\r\n              type: 'radialBar',\r\n              series: [{ name: 'Memory', data: data.metrics.map(m => m.memory_usage) }],\r\n            },\r\n            {\r\n              title: 'Active Connections',\r\n              type: 'bar',\r\n              series: [{ name: 'Connections', data: data.metrics.map(m => m.active_connections) }],\r\n              categories: data.metrics.map(m => m.timestamp),\r\n            },\r\n            {\r\n              title: 'Response Time',\r\n              type: 'line',\r\n              series: [{ name: 'Response', data: data.metrics.map(m => m.response_time) }],\r\n              categories: data.metrics.map(m => m.timestamp),\r\n            },\r\n          ]);\r\n        } else {\r\n          setError('Failed to fetch metrics.');\r\n        }\r\n      } catch (err) {\r\n        setError('Error fetching data.');\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const intervalId = setInterval(fetchMetrics, 5000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-page\">\r\n      <button onClick={toggleSidebar}>Toggle Sidebar</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <motion.div className=\"charts\">\r\n        {charts.map((chart, index) => (\r\n          <div key={index}>\r\n            <h3>{chart.title}</h3>\r\n            <Chart\r\n              options={{\r\n                xaxis: { categories: chart.categories || [] },\r\n                theme: { palette: 'palette5' },\r\n              }}\r\n              series={chart.series}\r\n              type={chart.type}\r\n              height={350}\r\n            />\r\n          </div>\r\n        ))}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}