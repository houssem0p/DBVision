{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVIsion\\\\dbvision\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport DemoPage from './components/DemoPage';\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false); // Sidebar visibility state\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible(prev => !prev); // Toggle the sidebar visibility\n  };\n\n  // Function to handle successful login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // Update login state\n    setIsSidebarVisible(true); // Show sidebar after login\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1\",\n        children: [isSidebarVisible && /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(DemoPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(LoginPage, {\n                onLoginSuccess: handleLoginSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/main\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(MainPage, {\n                toggleSidebar: toggleSidebar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(RedirectToLogin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// Redirect component for unauthenticated access\n_s(App, \"/F3Jd1derGKMBmyo30GkYmv6G5Y=\");\n_c = App;\nconst RedirectToLogin = () => {\n  _s2();\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    navigate('/login'); // Redirect to login page\n  }, [navigate]);\n  return null; // Render nothing while redirecting\n};\n_s2(RedirectToLogin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c2 = RedirectToLogin;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RedirectToLogin\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","Navbar","DemoPage","LoginPage","MainPage","jsxDEV","_jsxDEV","App","_s","isSidebarVisible","setIsSidebarVisible","isLoggedIn","setIsLoggedIn","toggleSidebar","prev","handleLoginSuccess","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Sidebar","path","element","onLoginSuccess","RedirectToLogin","_c","_s2","navigate","useEffect","_c2","$RefreshReg$"],"sources":["D:/DBVIsion/dbvision/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nimport DemoPage from './components/DemoPage';\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\n\nconst App = () => {\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false); // Sidebar visibility state\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible((prev) => !prev); // Toggle the sidebar visibility\n  };\n\n  // Function to handle successful login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // Update login state\n    setIsSidebarVisible(true); // Show sidebar after login\n  };\n\n  return (\n    <Router>\n      <div className=\"flex flex-col h-screen\">\n        {/* Navbar */}\n        <Navbar />\n\n        <div className=\"flex flex-1\">\n          {/* Conditionally render Sidebar */}\n          {isSidebarVisible && <Sidebar />}\n\n          <div className=\"flex-1 overflow-y-auto\">\n            <Routes>\n              <Route path=\"/\" element={<DemoPage />} />\n              {/* Pass handleLoginSuccess to LoginPage */}\n              <Route\n                path=\"/login\"\n                element={<LoginPage onLoginSuccess={handleLoginSuccess} />}\n              />\n              {/* Restrict MainPage access if not logged in */}\n              <Route\n                path=\"/main\"\n                element={\n                  isLoggedIn ? (\n                    <MainPage toggleSidebar={toggleSidebar} />\n                  ) : (\n                    <RedirectToLogin />\n                  )\n                }\n              />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\n// Redirect component for unauthenticated access\nconst RedirectToLogin = () => {\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    navigate('/login'); // Redirect to login page\n  }, [navigate]);\n\n  return null; // Render nothing while redirecting\n};\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,MAAM,MAAM,qBAAqB;AAExC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMkB,aAAa,GAAGA,CAAA,KAAM;IAC1BH,mBAAmB,CAAEI,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BH,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBF,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEJ,OAAA,CAACT,MAAM;IAAAmB,QAAA,eACLV,OAAA;MAAKW,SAAS,EAAC,wBAAwB;MAAAD,QAAA,gBAErCV,OAAA,CAACL,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVf,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAD,QAAA,GAEzBP,gBAAgB,iBAAIH,OAAA,CAACgB,OAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEhCf,OAAA;UAAKW,SAAS,EAAC,wBAAwB;UAAAD,QAAA,eACrCV,OAAA,CAACR,MAAM;YAAAkB,QAAA,gBACLV,OAAA,CAACP,KAAK;cAACwB,IAAI,EAAC,GAAG;cAACC,OAAO,eAAElB,OAAA,CAACJ,QAAQ;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAEzCf,OAAA,CAACP,KAAK;cACJwB,IAAI,EAAC,QAAQ;cACbC,OAAO,eAAElB,OAAA,CAACH,SAAS;gBAACsB,cAAc,EAAEV;cAAmB;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,eAEFf,OAAA,CAACP,KAAK;cACJwB,IAAI,EAAC,OAAO;cACZC,OAAO,EACLb,UAAU,gBACRL,OAAA,CAACF,QAAQ;gBAACS,aAAa,EAAEA;cAAc;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAE1Cf,OAAA,CAACoB,eAAe;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAErB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;;AAED;AAAAb,EAAA,CAnDMD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAoDT,MAAMmB,eAAe,GAAGA,CAAA,KAAM;EAAAE,GAAA;EAC5B,MAAMC,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAE9BN,KAAK,CAACoC,SAAS,CAAC,MAAM;IACpBD,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OAAO,IAAI,CAAC,CAAC;AACf,CAAC;AAACD,GAAA,CARIF,eAAe;EAAA,QACF1B,WAAW;AAAA;AAAA+B,GAAA,GADxBL,eAAe;AAUrB,eAAenB,GAAG;AAAC,IAAAoB,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}