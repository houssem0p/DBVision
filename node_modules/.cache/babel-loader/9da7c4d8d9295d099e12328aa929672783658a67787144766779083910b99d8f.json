{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\nimport DemoPage from './components/DemoPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false); // Sidebar visibility state\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n  /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router,\n    future: {\n      v7_startTransition: true,\n      v7_relativeSplatPath: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n  const toggleSidebar = () => {\n    setIsSidebarVisible(prev => !prev);\n  };\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setIsSidebarVisible(true); // Show sidebar after login\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [isSidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar w-64 bg-gray-800 text-white p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sidebar Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(DemoPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LoginPage, {\n              onLoginSuccess: handleLoginSuccess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/main\",\n            element: isLoggedIn ? /*#__PURE__*/_jsxDEV(MainPage, {\n              toggleSidebar: toggleSidebar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 82\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/F3Jd1derGKMBmyo30GkYmv6G5Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","LoginPage","MainPage","DemoPage","jsxDEV","_jsxDEV","App","_s","isSidebarVisible","setIsSidebarVisible","isLoggedIn","setIsLoggedIn","RouterProvider","router","future","v7_startTransition","v7_relativeSplatPath","fileName","_jsxFileName","lineNumber","columnNumber","toggleSidebar","prev","handleLoginSuccess","children","className","path","element","onLoginSuccess","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\nimport DemoPage from './components/DemoPage';\n\n\nconst App = () => {\n  const [isSidebarVisible, setIsSidebarVisible] = useState(false); // Sidebar visibility state\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n  <RouterProvider\n    router={router}\n    future={{\n      v7_startTransition: true,\n      v7_relativeSplatPath: true,\n    }}\n  />\n\n  const toggleSidebar = () => {\n    setIsSidebarVisible((prev) => !prev);\n  };\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true);\n    setIsSidebarVisible(true); // Show sidebar after login\n  };\n\n  return (\n    <Router>\n      <div className=\"flex\">\n        {isSidebarVisible && (\n          <div className=\"sidebar w-64 bg-gray-800 text-white p-4\">\n            {/* Your sidebar content */}\n            <h3>Sidebar Content</h3>\n          </div>\n        )}\n        <div className=\"flex-1\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<DemoPage />}\n            />\n            <Route\n              path=\"/login\"\n              element={<LoginPage onLoginSuccess={handleLoginSuccess} />}\n            />\n            <Route\n              path=\"/main\"\n              element={isLoggedIn ? <MainPage toggleSidebar={toggleSidebar} /> : <LoginPage />}\n            />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}