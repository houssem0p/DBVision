{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVIsion\\\\dbvision\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  toggleSidebar\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    pieChart: {\n      series: [],\n      options: {\n        labels: [],\n        dataLabels: {\n          enabled: true\n        },\n        tooltip: {\n          enabled: true\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    },\n    scatterChart: {\n      series: [],\n      options: {\n        chart: {\n          zoom: {\n            enabled: true,\n            type: 'xy'\n          }\n        },\n        xaxis: {\n          categories: []\n        },\n        dataLabels: {\n          enabled: true\n        },\n        tooltip: {\n          enabled: true\n        },\n        theme: {\n          palette: 'palette5'\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\n    if (credentials) {\n      const {\n        host,\n        username,\n        password,\n        database\n      } = credentials;\n      const fetchData = () => {\n        fetch(`http://localhost:5000/api/database-metrics?host=${host}&username=${username}&password=${password}&database=${database}`).then(response => response.json()).then(data => {\n          if (data.success && data.metrics.length > 0) {\n            const metrics = data.metrics;\n            setChartData({\n              pieChart: {\n                series: metrics.map(item => item.value),\n                options: {\n                  ...chartData.pieChart.options,\n                  labels: metrics.map(item => item.name)\n                }\n              },\n              scatterChart: {\n                series: metrics.map((item, index) => ({\n                  name: item.name,\n                  data: [[index, item.value]]\n                })),\n                options: {\n                  ...chartData.scatterChart.options,\n                  xaxis: {\n                    categories: metrics.map(item => item.name)\n                  }\n                }\n              }\n            });\n          }\n        }).catch(err => console.error('Error fetching data:', err));\n      };\n      fetchData(); // Initial fetch\n      const intervalId = setInterval(fetchData, 5000); // Poll every 5 seconds\n\n      return () => clearInterval(intervalId); // Cleanup on component unmount\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page bg-gray-900 min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar,\n      className: \"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\",\n      children: \"Toggle Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-white mb-6\",\n        children: \"Database Monitoring Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Database Metrics Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.pieChart.options,\n            series: chartData.pieChart.series,\n            type: \"pie\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold text-white mb-4\",\n            children: \"Scatter Plot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chart, {\n            options: chartData.scatterChart.options,\n            series: chartData.scatterChart.series,\n            type: \"scatter\",\n            height: 350\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"6yD+F3LjNguszenjsChw/FqycCc=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","MainPage","toggleSidebar","_s","chartData","setChartData","pieChart","series","options","labels","dataLabels","enabled","tooltip","theme","palette","scatterChart","chart","zoom","type","xaxis","categories","credentials","JSON","parse","localStorage","getItem","host","username","password","database","fetchData","fetch","then","response","json","data","success","metrics","length","map","item","value","name","index","catch","err","console","error","intervalId","setInterval","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","height","_c","$RefreshReg$"],"sources":["D:/DBVIsion/dbvision/src/components/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nconst MainPage = ({ toggleSidebar }) => {\r\n  const [chartData, setChartData] = useState({\r\n    pieChart: {\r\n      series: [],\r\n      options: {\r\n        labels: [],\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n    scatterChart: {\r\n      series: [],\r\n      options: {\r\n        chart: {\r\n          zoom: {\r\n            enabled: true,\r\n            type: 'xy',\r\n          },\r\n        },\r\n        xaxis: {\r\n          categories: [],\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n        theme: {\r\n          palette: 'palette5',\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const credentials = JSON.parse(localStorage.getItem('dbCredentials'));\r\n    if (credentials) {\r\n      const { host, username, password, database } = credentials;\r\n\r\n      const fetchData = () => {\r\n        fetch(`http://localhost:5000/api/database-metrics?host=${host}&username=${username}&password=${password}&database=${database}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data.success && data.metrics.length > 0) {\r\n              const metrics = data.metrics;\r\n              setChartData({\r\n                pieChart: {\r\n                  series: metrics.map((item) => item.value),\r\n                  options: {\r\n                    ...chartData.pieChart.options,\r\n                    labels: metrics.map((item) => item.name),\r\n                  },\r\n                },\r\n                scatterChart: {\r\n                  series: metrics.map((item, index) => ({ name: item.name, data: [[index, item.value]] })),\r\n                  options: {\r\n                    ...chartData.scatterChart.options,\r\n                    xaxis: { categories: metrics.map((item) => item.name) },\r\n                  },\r\n                },\r\n              });\r\n            }\r\n          })\r\n          .catch((err) => console.error('Error fetching data:', err));\r\n      };\r\n\r\n      fetchData(); // Initial fetch\r\n      const intervalId = setInterval(fetchData, 5000); // Poll every 5 seconds\r\n\r\n      return () => clearInterval(intervalId); // Cleanup on component unmount\r\n    }\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <div className=\"main-page bg-gray-900 min-h-screen p-4\">\r\n      <button\r\n        onClick={toggleSidebar}\r\n        className=\"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\"\r\n      >\r\n        Toggle Sidebar\r\n      </button>\r\n\r\n      <div className=\"py-8 px-4\">\r\n        <h2 className=\"text-3xl font-bold text-white mb-6\">Database Monitoring Dashboard</h2>\r\n\r\n        <div className=\"mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-8\">\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Database Metrics Distribution</h3>\r\n            <Chart\r\n              options={chartData.pieChart.options}\r\n              series={chartData.pieChart.series}\r\n              type=\"pie\"\r\n              height={350}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <h3 className=\"text-2xl font-semibold text-white mb-4\">Scatter Plot</h3>\r\n            <Chart\r\n              options={chartData.scatterChart.options}\r\n              series={chartData.scatterChart.series}\r\n              type=\"scatter\"\r\n              height={350}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}