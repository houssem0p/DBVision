{"ast":null,"code":"var _jsxFileName = \"D:\\\\DBVision\\\\dbvision\\\\src\\\\components\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport Chart from 'react-apexcharts'; // Import ApexCharts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = ({\n  toggleSidebar\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({\n    series: [],\n    options: {\n      chart: {\n        toolbar: {\n          show: false // Hide toolbar\n        }\n      },\n      xaxis: {\n        categories: ['Users', 'Orders', 'Products'] // Categories for your chart\n      },\n      theme: {\n        mode: 'dark' // Dark theme for the chart\n      }\n    }\n  });\n  useEffect(() => {\n    // Fetch data from the API (your backend route)\n    fetch('/api/dashboard-data').then(response => response.json()).then(data => {\n      // Set the data for the chart dynamically based on the fetched data\n      setData([{\n        name: 'Users',\n        value: data.users\n      }, {\n        name: 'Orders',\n        value: data.orders\n      }, {\n        name: 'Products',\n        value: data.products\n      }]);\n      setChartData({\n        series: [{\n          name: 'Count',\n          data: [data.users, data.orders, data.products]\n        }],\n        options: {\n          ...chartData.options,\n          xaxis: {\n            ...chartData.options.xaxis,\n            categories: ['Users', 'Orders', 'Products']\n          }\n        }\n      });\n    }).catch(err => console.error('Error fetching data:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page bg-gray-900 min-h-screen p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSidebar // Toggle sidebar visibility\n      ,\n      className: \"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\",\n      children: \"Toggle Sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-white mb-6\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-6 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold text-purple-500\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-300\",\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-semibold text-white mb-4\",\n          children: \"User and Order Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: chartData.options,\n          series: chartData.series,\n          type: \"bar\" // You can change the type to 'line' or 'pie' as needed\n          ,\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"OO9Az7/z02kO7ghUCqEAQbtShTw=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","motion","Chart","jsxDEV","_jsxDEV","MainPage","toggleSidebar","_s","data","setData","chartData","setChartData","series","options","chart","toolbar","show","xaxis","categories","theme","mode","fetch","then","response","json","name","value","users","orders","products","catch","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","animate","transition","duration","map","item","type","height","_c","$RefreshReg$"],"sources":["D:/DBVision/dbvision/src/components/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport Chart from 'react-apexcharts'; // Import ApexCharts\r\n\r\nconst MainPage = ({ toggleSidebar }) => {\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        toolbar: {\r\n          show: false, // Hide toolbar\r\n        },\r\n      },\r\n      xaxis: {\r\n        categories: ['Users', 'Orders', 'Products'], // Categories for your chart\r\n      },\r\n      theme: {\r\n        mode: 'dark', // Dark theme for the chart\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API (your backend route)\r\n    fetch('/api/dashboard-data')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Set the data for the chart dynamically based on the fetched data\r\n        setData([\r\n          { name: 'Users', value: data.users },\r\n          { name: 'Orders', value: data.orders },\r\n          { name: 'Products', value: data.products },\r\n        ]);\r\n        setChartData({\r\n          series: [\r\n            {\r\n              name: 'Count',\r\n              data: [data.users, data.orders, data.products],\r\n            },\r\n          ],\r\n          options: {\r\n            ...chartData.options,\r\n            xaxis: {\r\n              ...chartData.options.xaxis,\r\n              categories: ['Users', 'Orders', 'Products'],\r\n            },\r\n          },\r\n        });\r\n      })\r\n      .catch((err) => console.error('Error fetching data:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main-page bg-gray-900 min-h-screen p-4\">\r\n      <button\r\n        onClick={toggleSidebar} // Toggle sidebar visibility\r\n        className=\"bg-purple-600 text-white p-2 rounded-md hover:bg-purple-700 transition duration-300 transform hover:scale-105 mb-6\"\r\n      >\r\n        Toggle Sidebar\r\n      </button>\r\n\r\n      <div className=\"py-8 px-4\">\r\n        <h2 className=\"text-3xl font-bold text-white mb-6\">Dashboard</h2>\r\n\r\n        <motion.div\r\n          className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          {data.map((item) => (\r\n            <div\r\n              key={item.name}\r\n              className=\"bg-gray-800 p-6 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-purple-500\">{item.name}</h3>\r\n              <p className=\"text-gray-300\">{item.value}</p>\r\n            </div>\r\n          ))}\r\n        </motion.div>\r\n\r\n        {/* ApexCharts Bar Chart */}\r\n        <div className=\"mt-12\">\r\n          <h3 className=\"text-2xl font-semibold text-white mb-4\">User and Order Statistics</h3>\r\n          <Chart\r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\" // You can change the type to 'line' or 'pie' as needed\r\n            height={350}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}