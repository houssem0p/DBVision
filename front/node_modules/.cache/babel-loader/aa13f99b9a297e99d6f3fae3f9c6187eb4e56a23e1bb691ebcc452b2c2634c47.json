{"ast":null,"code":"var _jsxFileName = \"D:\\\\projet\\\\DBVision\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport DemoPage from './components/DemoPage';\nimport LoginPage from './components/LoginPage';\nimport MainPage from './components/MainPage';\nimport SgbdOverview from './components/SgbdOverview';\nimport DashboardChoicePage from './components/DashboardChoicePage'; // Import DashboardChoicePage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\n\n  // Function to handle successful login\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // Update login state\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(DemoPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(LoginPage, {\n                onLoginSuccess: handleLoginSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/choices\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(DashboardChoicePage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(RedirectToLogin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/main\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(RedirectToLogin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sgbd-overview\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(SgbdOverview, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(RedirectToLogin, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n// Redirect component for unauthenticated access\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nconst RedirectToLogin = () => {\n  _s2();\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    navigate('/login'); // Redirect to login page\n  }, [navigate]);\n  return null; // Render nothing while redirecting\n};\n_s2(RedirectToLogin, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c2 = RedirectToLogin;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RedirectToLogin\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","Navbar","DemoPage","LoginPage","MainPage","SgbdOverview","DashboardChoicePage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLoginSuccess","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLoginSuccess","RedirectToLogin","_c","_s2","navigate","useEffect","_c2","$RefreshReg$"],"sources":["D:/projet/DBVision/front/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport DemoPage from './components/DemoPage';\r\nimport LoginPage from './components/LoginPage';\r\nimport MainPage from './components/MainPage';\r\nimport SgbdOverview from './components/SgbdOverview';\r\nimport DashboardChoicePage from './components/DashboardChoicePage'; // Import DashboardChoicePage\r\n\r\nconst App = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Login state\r\n\r\n  // Function to handle successful login\r\n  const handleLoginSuccess = () => {\r\n    setIsLoggedIn(true); // Update login state\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"flex flex-col h-screen\">\r\n        {/* Navbar */}\r\n        <Navbar />\r\n\r\n        <div className=\"flex flex-1\">\r\n          <div className=\"flex-1 overflow-y-auto\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<DemoPage />} />\r\n              <Route\r\n                path=\"/login\"\r\n                element={<LoginPage onLoginSuccess={handleLoginSuccess} />}\r\n              />\r\n              <Route\r\n                path=\"/choices\"\r\n                element={\r\n                  isLoggedIn ? (\r\n                    <DashboardChoicePage />\r\n                  ) : (\r\n                    <RedirectToLogin />\r\n                  )\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/main\"\r\n                element={\r\n                  isLoggedIn ? (\r\n                    <MainPage />\r\n                  ) : (\r\n                    <RedirectToLogin />\r\n                  )\r\n                }\r\n              />\r\n              <Route\r\n                path=\"/sgbd-overview\"\r\n                element={\r\n                  isLoggedIn ? (\r\n                    <SgbdOverview />\r\n                  ) : (\r\n                    <RedirectToLogin />\r\n                  )\r\n                }\r\n              />\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\n// Redirect component for unauthenticated access\r\nconst RedirectToLogin = () => {\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    navigate('/login'); // Redirect to login page\r\n  }, [navigate]);\r\n\r\n  return null; // Render nothing while redirecting\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}